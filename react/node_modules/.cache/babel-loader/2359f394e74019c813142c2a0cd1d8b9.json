{"ast":null,"code":"import _classCallCheck from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport AddTodoListContainer from '../containers/AddTodoContainer';\nimport FooterContainer from '../containers/FooterContainer';\nimport TodoListContainer from '../containers/TodoListContainer';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      todos: [{\n        id: 1,\n        text: \"学习react\",\n        completed: true\n      }, {\n        id: 2,\n        text: \"学习redux\",\n        completed: false\n      }, {\n        id: 3,\n        text: \"学习react router\",\n        completed: false\n      }],\n      filter: 'all'\n    };\n    _this.nextTodoId = 0;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var todos = this.getVisibleValue();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(AddTodoListContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(TodoListContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(FooterContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n    /*  // 过滤筛选待办事项\n      getVisibleValue = () => {\n        const currentFilter = this.state.filter\n        return this.state.todos.filter(todo => {\n          if (currentFilter === \"active\") { //正在进行中\n            return !todo.completed\n          } else if (currentFilter === \"completed\") {\n            return todo.completed\n          } else {\n            return todo\n          }\n        })\n      }\n    \n      // 添加待办事项\n      addTodo = text => {\n        const todo = {\n          id: this.nextTodoId++,\n          text,\n          completed: false\n        }\n        const newTodos = [todo, ...this.state.todos]\n        this.setState({\n          todos: newTodos\n        })\n      }\n    \n      // 更改事项状态\n      toggleTodo = todoId => {\n        const newTodos = this.state.todos.map(todo => {\n          return todo.id === todoId ? {...todo, completed: !todo.completed} : todo\n        })\n        this.setState({\n          todos: newTodos\n        })\n      }\n    \n      setVisibilityFilter = filter => {\n        this.setState({\n          filter\n        })\n      }*/\n\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["G:\\My HTML Project\\imooc-react\\imooc-react\\src\\components\\App.js"],"names":["React","Component","AddTodoListContainer","FooterContainer","TodoListContainer","App","props","state","todos","id","text","completed","filter","nextTodoId","getVisibleValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,SAFR;AAGEC,QAAAA,SAAS,EAAE;AAHb,OADK,EAML;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,SAFR;AAGEC,QAAAA,SAAS,EAAE;AAHb,OANK,EAWL;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,gBAFR;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAXK,CADI;AAkBXC,MAAAA,MAAM,EAAE;AAlBG,KAAb;AAoBA,UAAKC,UAAL,GAAkB,CAAlB;AAtBiB;AAuBlB;;;;6BAEQ;AACP,UAAML,KAAK,GAAG,KAAKM,eAAL,EAAd;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAxCkBb,S;;AAoFlB,eAAeI,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport AddTodoListContainer from '../containers/AddTodoContainer'\nimport FooterContainer from '../containers/FooterContainer'\nimport TodoListContainer from '../containers/TodoListContainer'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      todos: [\n        {\n          id: 1,\n          text: \"学习react\",\n          completed: true\n        },\n        {\n          id: 2,\n          text: \"学习redux\",\n          completed: false\n        },\n        {\n          id: 3,\n          text: \"学习react router\",\n          completed: false\n        },\n      ],\n      filter: 'all'\n    }\n    this.nextTodoId = 0\n  }\n\n  render() {\n    const todos = this.getVisibleValue()\n    return (\n      <div>\n{/*        <AddTodo addTodo={this.addTodo}/>\n        <TodoList todos={todos} toggleTodo={this.toggleTodo}/>\n        <Footer filter={this.state.filter} setVisibilityFilter={this.setVisibilityFilter}/>*/}\n        <AddTodoListContainer />\n        <TodoListContainer />\n        <FooterContainer />\n      </div>\n    )\n  }\n\n/*  // 过滤筛选待办事项\n  getVisibleValue = () => {\n    const currentFilter = this.state.filter\n    return this.state.todos.filter(todo => {\n      if (currentFilter === \"active\") { //正在进行中\n        return !todo.completed\n      } else if (currentFilter === \"completed\") {\n        return todo.completed\n      } else {\n        return todo\n      }\n    })\n  }\n\n  // 添加待办事项\n  addTodo = text => {\n    const todo = {\n      id: this.nextTodoId++,\n      text,\n      completed: false\n    }\n    const newTodos = [todo, ...this.state.todos]\n    this.setState({\n      todos: newTodos\n    })\n  }\n\n  // 更改事项状态\n  toggleTodo = todoId => {\n    const newTodos = this.state.todos.map(todo => {\n      return todo.id === todoId ? {...todo, completed: !todo.completed} : todo\n    })\n    this.setState({\n      todos: newTodos\n    })\n  }\n\n  setVisibilityFilter = filter => {\n    this.setState({\n      filter\n    })\n  }*/\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}