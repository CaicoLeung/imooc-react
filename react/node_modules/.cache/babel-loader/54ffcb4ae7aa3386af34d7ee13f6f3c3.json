{"ast":null,"code":"import _regeneratorRuntime from \"/home/caico/Desktop/Code/imooc-react/imooc-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/caico/Desktop/Code/imooc-react/imooc-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ADD_TODO, TOGGLE_TODO, SET_FILTER, SET_TODO_TEXT, FETCH_TODOS_REQUEST, FETCH_TODOS_SUCCESS, FETCH_TODOS_FAILURE } from './actionTypes';\nvar nextTodoId = 0;\nexport var addTodo = function addTodo(text) {\n  return {\n    type: ADD_TODO,\n    id: nextTodoId++,\n    text: text\n  };\n};\nexport var toggleTodo = function toggleTodo(id) {\n  return {\n    type: TOGGLE_TODO,\n    id: id\n  };\n};\nexport var setFilter = function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    filter: filter\n  };\n};\nexport var setTodoText = function setTodoText(text) {\n  return {\n    type: SET_TODO_TEXT,\n    text: text\n  };\n};\n\nvar fetchTodosRequest = function fetchTodosRequest() {\n  return {\n    type: FETCH_TODOS_REQUEST\n  };\n};\n\nvar fetchTodosSuccess = function fetchTodosSuccess(data) {\n  return {\n    type: FETCH_TODOS_SUCCESS,\n    data: data\n  };\n};\n\nvar fetchTodosFailure = function fetchTodosFailure(error) {\n  return {\n    type: FETCH_TODOS_FAILURE,\n    error: error\n  };\n};\n\nexport var fetchTodos = function fetchTodos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(fetchTodosRequest());\n                _context.next = 3;\n                return fetch('./mocl/todos.json');\n\n              case 3:\n                response = _context.sent;\n                console.log(response);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  ); // return (dispatch) => {\n  //   dispatch(fetchTodosRequest())\n  //   return fetch(\"./mock/todos.json\").then(response =>\n  //     response.json()\n  //   ).then(data => {\n  //     dispatch(fetchTodosSuccess(data))\n  //   }).catch(error => {\n  //     dispatch(fetchTodosFailure(error))\n  //     console.log(\"An Error occurred: \" + error);\n  //   })\n  // response.json().then(data => {\n  //   dispatch(fetchTodosSuccess(data))\n  // }),\n  //   error => {\n  //     dispatch(fetchTodosFailure(error));\n  //     console.log(\"An Error occurred: \" + error);\n  //   }\n  // )\n  // }\n};","map":{"version":3,"sources":["/home/caico/Desktop/Code/imooc-react/imooc-react/src/actions/index.js"],"names":["ADD_TODO","TOGGLE_TODO","SET_FILTER","SET_TODO_TEXT","FETCH_TODOS_REQUEST","FETCH_TODOS_SUCCESS","FETCH_TODOS_FAILURE","nextTodoId","addTodo","text","type","id","toggleTodo","setFilter","filter","setTodoText","fetchTodosRequest","fetchTodosSuccess","data","fetchTodosFailure","error","fetchTodos","dispatch","fetch","response","console","log"],"mappings":";;AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,mBAPF,QAQO,eARP;AAUA,IAAIC,UAAU,GAAG,CAAjB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAW;AAChCC,IAAAA,IAAI,EAAEV,QAD0B;AAEhCW,IAAAA,EAAE,EAAEJ,UAAU,EAFkB;AAGhCE,IAAAA,IAAI,EAAJA;AAHgC,GAAX;AAAA,CAAhB;AAMP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACD,EAAD;AAAA,SAAS;AACjCD,IAAAA,IAAI,EAAET,WAD2B;AAEjCU,IAAAA,EAAE,EAAFA;AAFiC,GAAT;AAAA,CAAnB;AAKP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAAa;AACpCJ,IAAAA,IAAI,EAAER,UAD8B;AAEpCY,IAAAA,MAAM,EAANA;AAFoC,GAAb;AAAA,CAAlB;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACN,IAAD;AAAA,SAAW;AACpCC,IAAAA,IAAI,EAAEP,aAD8B;AAEpCM,IAAAA,IAAI,EAAJA;AAFoC,GAAX;AAAA,CAApB;;AAKP,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AAC/BN,IAAAA,IAAI,EAAEN;AADyB,GAAP;AAAA,CAA1B;;AAIA,IAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD;AAAA,SAAW;AACnCR,IAAAA,IAAI,EAAEL,mBAD6B;AAEnCa,IAAAA,IAAI,EAAJA;AAFmC,GAAX;AAAA,CAA1B;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,SAAY;AACpCV,IAAAA,IAAI,EAAEJ,mBAD8B;AAEpCc,IAAAA,KAAK,EAALA;AAFoC,GAAZ;AAAA,CAA1B;;AAKA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,gBAAAA,QAAQ,CAACN,iBAAiB,EAAlB,CAAR;AADK;AAAA,uBAEkBO,KAAK,CAAC,mBAAD,CAFvB;;AAAA;AAECC,gBAAAA,QAFD;AAGLC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA,IAD8B,CAM9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACF;AACD,CAzBM","sourcesContent":["import {\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  SET_FILTER,\r\n  SET_TODO_TEXT,\r\n  FETCH_TODOS_REQUEST,\r\n  FETCH_TODOS_SUCCESS,\r\n  FETCH_TODOS_FAILURE\r\n} from './actionTypes'\r\n\r\nlet nextTodoId = 0\r\n\r\nexport const addTodo = (text) => ({\r\n  type: ADD_TODO,\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const toggleTodo = (id) => ({\r\n  type: TOGGLE_TODO,\r\n  id\r\n})\r\n\r\nexport const setFilter = (filter) => ({\r\n  type: SET_FILTER,\r\n  filter\r\n})\r\n\r\nexport const setTodoText = (text) => ({\r\n  type: SET_TODO_TEXT,\r\n  text\r\n})\r\n\r\nconst fetchTodosRequest = () => ({\r\n  type: FETCH_TODOS_REQUEST,\r\n})\r\n\r\nconst fetchTodosSuccess = (data) => ({\r\n  type: FETCH_TODOS_SUCCESS,\r\n  data\r\n})\r\n\r\nconst fetchTodosFailure = (error) => ({\r\n  type: FETCH_TODOS_FAILURE,\r\n  error\r\n})\r\n\r\nexport const fetchTodos = () => {\r\n  return async(dispatch) => {\r\n    dispatch(fetchTodosRequest())\r\n    const response = await fetch('./mocl/todos.json')\r\n    console.log(response);\r\n  }\r\n  // return (dispatch) => {\r\n  //   dispatch(fetchTodosRequest())\r\n  //   return fetch(\"./mock/todos.json\").then(response =>\r\n  //     response.json()\r\n  //   ).then(data => {\r\n  //     dispatch(fetchTodosSuccess(data))\r\n  //   }).catch(error => {\r\n  //     dispatch(fetchTodosFailure(error))\r\n  //     console.log(\"An Error occurred: \" + error);\r\n  //   })\r\n      // response.json().then(data => {\r\n      //   dispatch(fetchTodosSuccess(data))\r\n      // }),\r\n    //   error => {\r\n    //     dispatch(fetchTodosFailure(error));\r\n    //     console.log(\"An Error occurred: \" + error);\r\n    //   }\r\n    // )\r\n  // }\r\n}"]},"metadata":{},"sourceType":"module"}