{"ast":null,"code":"import _toConsumableArray from \"/home/caico/Desktop/Code/imooc-react/imooc-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/caico/Desktop/Code/imooc-react/imooc-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TODO, TOGGLE_TODO, FETCH_TODOS_REQUEST, FETCH_TODOS_FAILURE, FETCH_TODOS_SUCCESS } from \"../actions/actionTypes\";\nvar initialState = {\n  isFetching: false,\n  error: null,\n  data: {}\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var acton = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (acton.type) {\n    case FETCH_TODOS_REQUEST:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case FETCH_TODOS_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        data: acton.data\n      });\n\n    case FETCH_TODOS_FAILURE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: acton.error\n      });\n\n    default:\n      return _objectSpread({}, state, {\n        data: todos\n      });\n  }\n};\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [].concat(_toConsumableArray(state), [{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }]);\n\n    case TOGGLE_TODO:\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/home/caico/Desktop/Code/imooc-react/imooc-react/src/reduces/todos.js"],"names":["ADD_TODO","TOGGLE_TODO","FETCH_TODOS_REQUEST","FETCH_TODOS_FAILURE","FETCH_TODOS_SUCCESS","initialState","isFetching","error","data","reducer","state","acton","type","todos","action","id","text","completed","map","todo"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,mBAA/B,EAAoDC,mBAApD,EAAyEC,mBAAzE,QAAmG,wBAAnG;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBL,YAAwB;AAAA,MAAVM,KAAU;;AAC/C,UAAQA,KAAK,CAACC,IAAd;AACE,SAAKV,mBAAL;AACE,+BACKQ,KADL;AAEEJ,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKF,mBAAL;AACE,+BACKM,KADL;AAEEJ,QAAAA,UAAU,EAAE,KAFd;AAGEE,QAAAA,IAAI,EAAEG,KAAK,CAACH;AAHd;;AAKF,SAAKL,mBAAL;AACE,+BACKO,KADL;AAEEJ,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,KAAK,EAAEI,KAAK,CAACJ;AAHf;;AAKF;AACE,+BACKG,KADL;AAEEF,QAAAA,IAAI,EAAEK;AAFR;AAnBJ;AAwBD,CAzBD;;AA2BA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBH,KAAuB,uEAAf,EAAe;AAAA,MAAXI,MAAW;;AACpC,UAAQA,MAAM,CAACF,IAAf;AACE,SAAKZ,QAAL;AACE,0CACKU,KADL,IAEE;AACEK,QAAAA,EAAE,EAAED,MAAM,CAACC,EADb;AAEEC,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAFF;;AAQF,SAAKhB,WAAL;AACE,aAAOS,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,eAAKA,IAAI,CAACJ,EAAL,KAAYD,MAAM,CAACC,EAApB,qBAClBI,IADkB;AACZF,UAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AADL,aAEnBE,IAFe;AAAA,OAAd,CAAP;;AAIF;AACE,aAAOT,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeG,KAAf","sourcesContent":["import {ADD_TODO, TOGGLE_TODO, FETCH_TODOS_REQUEST, FETCH_TODOS_FAILURE, FETCH_TODOS_SUCCESS} from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  error: null,\r\n  data: {}\r\n}\r\n\r\nconst reducer = (state = initialState, acton) => {\r\n  switch (acton.type) {\r\n    case FETCH_TODOS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      }\r\n    case FETCH_TODOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        data: acton.data\r\n      }\r\n    case FETCH_TODOS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: acton.error\r\n      }\r\n    default:\r\n      return {\r\n        ...state,\r\n        data: todos\r\n      }\r\n  }\r\n}\r\n\r\nconst todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case TOGGLE_TODO:\r\n      return state.map(todo => (todo.id === action.id) ? {\r\n          ...todo, completed: !todo.completed\r\n        } : todo\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos"]},"metadata":{},"sourceType":"module"}