{"ast":null,"code":"import _objectSpread from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { ADD_TODO, TOGGLE_TODO } from \"../actions/actionTypes\";\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [].concat(_toConsumableArray(state), [{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }]);\n\n    case TOGGLE_TODO:\n      return state.map(function (todo) {\n        todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["G:\\My HTML Project\\imooc-react\\imooc-react\\src\\reduces\\todos.js"],"names":["ADD_TODO","TOGGLE_TODO","todos","state","action","type","id","text","completed","map","todo"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAqC,wBAArC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,QAAL;AACE,0CAAWG,KAAX,IAAkB;AAChBG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADK;AAEhBC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFG;AAGhBC,QAAAA,SAAS,EAAE;AAHK,OAAlB;;AAKF,SAAKP,WAAL;AACE,aAAOE,KAAK,CAACM,GAAN,CAAU,UAAAC,IAAI,EAAI;AACvBA,QAAAA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,qBACKI,IADL;AACWF,UAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAD5B,aAEIE,IAFJ;AAGD,OAJM,CAAP;;AAKF;AACE,aAAOP,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,KAAf","sourcesContent":["import {ADD_TODO, TOGGLE_TODO,} from \"../actions/actionTypes\"\r\n\r\nconst todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, {\r\n        id: action.id,\r\n        text: action.text,\r\n        completed: false\r\n      }]\r\n    case TOGGLE_TODO:\r\n      return state.map(todo => {\r\n        todo.id === action.id ? {\r\n          ...todo, completed: !todo.completed\r\n        } : todo\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos"]},"metadata":{},"sourceType":"module"}