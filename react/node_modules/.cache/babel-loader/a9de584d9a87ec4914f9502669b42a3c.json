{"ast":null,"code":"import _objectSpread from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"G:\\\\My HTML Project\\\\imooc-react\\\\imooc-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { ADD_TODO, TOGGLE_TODO } from \"../actions/actionTypes\";\nvar initalState = [{\n  id: 0,\n  text: 'Learn React',\n  completed: true\n}, {\n  id: 1,\n  text: 'Learn Redux',\n  completed: false\n}, {\n  id: 2,\n  text: 'Learn Router',\n  completed: false\n}];\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [].concat(_toConsumableArray(state), [{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }]);\n\n    case TOGGLE_TODO:\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["G:\\My HTML Project\\imooc-react\\imooc-react\\src\\reduces\\todos.js"],"names":["ADD_TODO","TOGGLE_TODO","initalState","id","text","completed","todos","state","action","console","log","type","map","todo"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,wBAApC;AAEA,IAAMC,WAAW,GAAG,CAClB;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,aAAd;AAA6BC,EAAAA,SAAS,EAAE;AAAxC,CADkB,EAElB;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,aAAd;AAA6BC,EAAAA,SAAS,EAAE;AAAxC,CAFkB,EAGlB;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,cAAd;AAA8BC,EAAAA,SAAS,EAAE;AAAzC,CAHkB,CAApB;;AAMA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBL,WAAwB;AAAA,MAAXM,MAAW;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKX,QAAL;AACE,0CACKO,KADL,IAEE;AACEJ,QAAAA,EAAE,EAAEK,MAAM,CAACL,EADb;AAEEC,QAAAA,IAAI,EAAEI,MAAM,CAACJ,IAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAFF;;AAQF,SAAKJ,WAAL;AACE,aAAOM,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI;AAAA,eAAKA,IAAI,CAACV,EAAL,KAAYK,MAAM,CAACL,EAApB,qBAClBU,IADkB;AACZR,UAAAA,SAAS,EAAE,CAACQ,IAAI,CAACR;AADL,aAEnBQ,IAFe;AAAA,OAAd,CAAP;;AAIF;AACE,aAAON,KAAP;AAhBJ;AAkBD,CApBD;;AAsBA,eAAeD,KAAf","sourcesContent":["import {ADD_TODO, TOGGLE_TODO} from \"../actions/actionTypes\"\r\n\r\nconst initalState = [\r\n  {id: 0, text: 'Learn React', completed: true},\r\n  {id: 1, text: 'Learn Redux', completed: false},\r\n  {id: 2, text: 'Learn Router', completed: false},\r\n]\r\n\r\nconst todos = (state = initalState, action) => {\r\n  console.log(state, action)\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case TOGGLE_TODO:\r\n      return state.map(todo => (todo.id === action.id) ? {\r\n          ...todo, completed: !todo.completed\r\n        } : todo\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos"]},"metadata":{},"sourceType":"module"}