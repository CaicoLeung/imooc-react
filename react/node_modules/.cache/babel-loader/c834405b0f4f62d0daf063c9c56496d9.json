{"ast":null,"code":"export var getText = function getText(state) {\n  return state.text;\n};\nexport var getFilter = function getFilter(state) {\n  return state.filter;\n};\n\nvar getTodos = function getTodos(state) {\n  return state;\n};\n\nexport var getVisibleTodos = function getVisibleTodos(state) {\n  var data = state.todos.data,\n      filter = state.filter;\n\n  switch (filter) {\n    case 'all':\n      return data;\n\n    case 'completed':\n      return data.filter(function (todo) {\n        return todo.completed;\n      });\n\n    case 'active':\n      return data.filter(function (todo) {\n        return !todo.completed;\n      });\n\n    default:\n      return new Error('Unknow filter: ' + filter);\n  }\n};","map":{"version":3,"sources":["/home/caico/Desktop/Code/imooc-react/imooc-react/src/selectors/index.js"],"names":["getText","state","text","getFilter","filter","getTodos","getVisibleTodos","data","todos","todo","completed","Error"],"mappings":"AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,IAAjB;AAAA,CAAhB;AAEP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACF,KAAD;AAAA,SAAWA,KAAK,CAACG,MAAjB;AAAA,CAAlB;;AAEP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAjB;;AAEA,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAW;AAAA,MAC1BM,IAD0B,GACTN,KADS,CAClCO,KADkC,CAC1BD,IAD0B;AAAA,MACnBH,MADmB,GACTH,KADS,CACnBG,MADmB;;AAEzC,UAAQA,MAAR;AACC,SAAK,KAAL;AACC,aAAOG,IAAP;;AACD,SAAK,WAAL;AACC,aAAOA,IAAI,CAACH,MAAL,CAAY,UAAAK,IAAI;AAAA,eAAIA,IAAI,CAACC,SAAT;AAAA,OAAhB,CAAP;;AACD,SAAK,QAAL;AACC,aAAOH,IAAI,CAACH,MAAL,CAAY,UAAAK,IAAI;AAAA,eAAI,CAACA,IAAI,CAACC,SAAV;AAAA,OAAhB,CAAP;;AACD;AACC,aAAO,IAAIC,KAAJ,CAAU,oBAAoBP,MAA9B,CAAP;AARF;AAUA,CAZM","sourcesContent":["export const getText = (state) => state.text\n\nexport const getFilter = (state) => state.filter\n\nconst getTodos = (state) => state\n\nexport const getVisibleTodos = (state) => {\n\tconst {todos: {data}, filter} = state\n\tswitch (filter) {\n\t\tcase 'all':\n\t\t\treturn data\n\t\tcase 'completed':\n\t\t\treturn data.filter(todo => todo.completed)\n\t\tcase 'active':\n\t\t\treturn data.filter(todo => !todo.completed)\n\t\tdefault:\n\t\t\treturn new Error('Unknow filter: ' + filter)\n\t}\n}"]},"metadata":{},"sourceType":"module"}