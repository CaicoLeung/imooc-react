{"ast":null,"code":"import { connect } from 'react-redux';\nimport TodoList from \"../components/TodoList\";\nimport { toggleTodo as _toggleTodo, fetchTodos as _fetchTodos } from '../actions';\nimport { getFilter } from '../selectors';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: getVisibleTodos(state.todos.data, getFilter(state))\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleTodo: function toggleTodo(id) {\n      return dispatch(_toggleTodo(id));\n    },\n    fetchTodos: function fetchTodos() {\n      return dispatch(_fetchTodos());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/home/caico/Desktop/Code/imooc-react/imooc-react/src/containers/TodoListContainer.js"],"names":["connect","TodoList","toggleTodo","fetchTodos","getFilter","mapStateToProps","state","todos","getVisibleTodos","data","mapDispatchToProps","dispatch","id"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,UAAU,IAAVA,WAAR,EAAoBC,UAAU,IAAVA,WAApB,QAAqC,YAArC;AACA,SAAQC,SAAR,QAAwB,cAAxB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,KAAK,EAAEC,eAAe,CAACF,KAAK,CAACC,KAAN,CAAYE,IAAb,EAAmBL,SAAS,CAACE,KAAD,CAA5B;AADU,GAAL;AAAA,CAA7B;;AAIA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCT,IAAAA,UAAU,EAAE,oBAAAU,EAAE;AAAA,aAAID,QAAQ,CAACT,WAAU,CAACU,EAAD,CAAX,CAAZ;AAAA,KADwB;AAEtCT,IAAAA,UAAU,EAAE;AAAA,aAAMQ,QAAQ,CAACR,WAAU,EAAX,CAAd;AAAA;AAF0B,GAAL;AAAA,CAAnC;;AAKA,eAAeH,OAAO,CAACK,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import {connect} from 'react-redux'\r\nimport TodoList from \"../components/TodoList\"\r\nimport {toggleTodo, fetchTodos} from '../actions'\r\nimport {getFilter} from '../selectors'\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos.data, getFilter(state))\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id)),\r\n  fetchTodos: () => dispatch(fetchTodos())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)"]},"metadata":{},"sourceType":"module"}